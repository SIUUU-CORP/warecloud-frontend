<div className="justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none">
        <div className="relative w-auto my-6 mx-auto max-w-3xl">
          {/*content*/}
          <div className="border-0 rounded-lg shadow-lg relative flex flex-col w-full dark:bg-teal-700 outline-none focus:outline-none">
            {/*header*/}
            <div className="flex items-start justify-between p-5 border-b border-solid border-blueteal-200 rounded-t">
              <h3 className="text-3xl font-semibold">
                {createItem ? `Create New Item` : `Update Item`}
              </h3>
              <button
                onClick={handleModal}
                type="button"
                className="text-teal-400 bg-transparent hover:bg-teal-200 hover:text-teal-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-teal-600 dark:hover:text-white"
                data-modal-toggle="crud-modal"
              >
                <svg
                  className="w-3 h-3"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 14 14"
                >
                  <path
                    stroke="currentColor"
                    strokeLinecap="round"
                    strokeLinejoin="round"
                    strokeWidth="2"
                    d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
                  />
                </svg>
                <span className="sr-only">Close modal</span>
              </button>
            </div>
            {/*body*/}
            <form onSubmit={handleSubmit}>
              <div className="relative p-6 flex-auto">
                <div className="col-span-2">
                  <label
                    htmlFor="name"
                    className="block mb-2 text-sm font-medium text-teal-900 dark:text-white"
                  >
                    Name
                  </label>
                  <input
                    type="text"
                    name="name"
                    value={name}
                    onChange={({ target }) => setName(target.value)}
                    id="name"
                    className="bg-teal-50 border border-teal-300 text-teal-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-teal-600 dark:border-teal-500 dark:placeholder-teal-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
                    placeholder="Type product name"
                  />
                </div>
                <div className="col-span-2 sm:col-span-1">
                  <label
                    htmlFor="price"
                    className="block mb-2 text-sm font-medium text-teal-900 dark:text-white"
                  >
                    Price
                  </label>
                  <input
                    type="number"
                    name="price"
                    value={price === 0 ? '' : price}
                    onChange={({ target }) => setPrice(parseInt(target.value))}
                    id="price"
                    className="bg-teal-50 border border-teal-300 text-teal-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-teal-600 dark:border-teal-500 dark:placeholder-teal-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
                    placeholder="$2999"
                  />
                </div>
                <div className="col-span-2 sm:col-span-1">
                  <label
                    htmlFor="price"
                    className="block mb-2 text-sm font-medium text-teal-900 dark:text-white"
                  >
                    Weight
                  </label>
                  <input
                    type="number"
                    name="price"
                    value={weight === 0 ? '' : weight}
                    onChange={({ target }) => setWeight(parseInt(target.value))}
                    id="price"
                    className="bg-teal-50 border border-teal-300 text-teal-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-teal-600 dark:border-teal-500 dark:placeholder-teal-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
                    placeholder="$2999"
                  />
                </div>
                <div className="col-span-2 sm:col-span-1">
                  <label
                    htmlFor="price"
                    className="block mb-2 text-sm font-medium text-teal-900 dark:text-white"
                  >
                    Stock
                  </label>
                  <input
                    type="number"
                    name="price"
                    value={stock === 0 ? '' : stock}
                    onChange={({ target }) => setStock(parseInt(target.value))}
                    id="price"
                    className="bg-teal-50 border border-teal-300 text-teal-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-teal-600 dark:border-teal-500 dark:placeholder-teal-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500"
                    placeholder="$2999"
                  />
                </div>
                <div className="col-span-2">
                  <label
                    htmlFor="description"
                    className="block mb-2 text-sm font-medium text-teal-900 dark:text-white"
                  >
                    Item Description
                  </label>
                  <textarea
                    id="description"
                    value={description}
                    onChange={({ target }) => setDescription(target.value)}
                    className="block p-2.5 w-full text-sm text-teal-900 bg-teal-50 rounded-lg border border-teal-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-teal-600 dark:border-teal-500 dark:placeholder-teal-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                    placeholder="Write product description here"
                  ></textarea>
                </div>
              </div>
              {/*footer*/}
              <div className="flex items-center justify-end p-6 border-t border-solid border-blueteal-200 rounded-b">
                <button
                  className="bg-red-700 hover:bg-red-800 active:bg-red-900 background-transparent font-bold uppercase text-sm px-6 py-2 rounded shadow hover:shadow outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150"
                  type="button"
                  onClick={handleModal}
                >
                  Close
                </button>
                <button
                  className="bg-emerald-500 hover:bg-emerald-600 active:bg-emerald-700 font-bold uppercase text-sm px-6 py-2 rounded shadow hover:shadow outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150"
                  type="submit"
                >
                  Save Changes
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
      <div className="opacity-25 fixed inset-0 z-40 bg-black"></div>